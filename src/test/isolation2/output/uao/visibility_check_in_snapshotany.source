-- This is intended to verify read-only transactions is able to run
-- concurently with index creation.

set default_table_access_method=@amname@;
SET

create table @amname@_snapshotany_tbl(a int, b int);
CREATE
insert into @amname@_snapshotany_tbl select a,a from generate_series(1,10) a;
INSERT 10

-- Case 1, verify readonly transaction is able to run concurrently with index creation.

1: begin;
BEGIN
1: select * from @amname@_snapshotany_tbl where a = 2;
 a | b 
---+---
 2 | 2 
(1 row)

2: begin;
BEGIN
2: create index on @amname@_snapshotany_tbl(a); -- expect no hang;
CREATE

1: select * from @amname@_snapshotany_tbl where a = 2; -- expect no hang;
 a | b 
---+---
 2 | 2 
(1 row)

1: end;
END
2: end;
END

-- Case 2, verify index creation is able to update table's pg_class->reltuples correctly
-- when pre-existing readonly transaction is not finished.

1: set enable_seqscan = off;
SET
1: begin;
BEGIN
-- start_ignore
1: explain select * from @amname@_snapshotany_tbl where a = 2;
 QUERY PLAN                                                                                       
--------------------------------------------------------------------------------------------------
 Gather Motion 1:1  (slice1; segments: 1)  (cost=4.82..40.81 rows=86 width=8)                     
   ->  Bitmap Heap Scan on @amname@_snapshotany_tbl  (cost=4.82..39.67 rows=29 width=8)             
         Recheck Cond: (a = 2)                                                                    
         ->  Bitmap Index Scan on @amname@_snapshotany_tbl_a_idx  (cost=0.00..4.81 rows=29 width=0) 
               Index Cond: (a = 2)                                                                
 Optimizer: Postgres query optimizer                                                              
(6 rows)
-- end_ignore
1: select * from @amname@_snapshotany_tbl where a = 2;
 a | b 
---+---
 2 | 2 
(1 row)

0U: select reltuples from pg_class where relname='@amname@_snapshotany_tbl'; -- expect reltuples = 5;
 reltuples 
-----------
 5         
(1 row)
0U: select reltuples from pg_class where relname='@amname@_snapshotany_tbl_a_idx'; -- expect reltuples = 5;
 reltuples 
-----------
 5         
(1 row)

2: delete from @amname@_snapshotany_tbl where a = 2;
DELETE 1

0U: analyze @amname@_snapshotany_tbl;
ANALYZE

0U: select reltuples from pg_class where relname='@amname@_snapshotany_tbl'; -- expect reltuples = 4;
 reltuples 
-----------
 4         
(1 row)
0U: select reltuples from pg_class where relname='@amname@_snapshotany_tbl_a_idx'; -- expect reltuples = 4;
 reltuples 
-----------
 4         
(1 row)

2: create index on @amname@_snapshotany_tbl(a);
CREATE

0U: select reltuples from pg_class where relname='@amname@_snapshotany_tbl'; -- expect reltuples = 4;
 reltuples 
-----------
 4         
(1 row)
0U: select reltuples from pg_class where relname='@amname@_snapshotany_tbl_a_idx'; -- expect reltuples = 4;
 reltuples 
-----------
 4         
(1 row)
0U: select reltuples from pg_class where relname='@amname@_snapshotany_tbl_a_idx1'; -- expect reltuples = 5;
 reltuples 
-----------
 5         
(1 row)
0Uq: ... <quitting>

1: end;
END

drop table @amname@_snapshotany_tbl;
DROP
reset default_table_access_method;
RESET
